version: '3'

services:
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    ports:
      - '5173:5173'
    environment:
      - VITE_API_URL=http://api:3000
      - NODE_ENV=development
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    depends_on:
      - api-server

  api-server:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.api.dev
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./apps/api/src/ocr/output:/app/src/ocr/output
      - ./apps/api/src/epub/output:/app/src/epub/output
    environment:
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=flipbook
      - PGPORT=5432
      - PORT=3000
      - NODE_ENV=development

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=flipbook
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./apps/api/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
